context PurchaseOrder {
	type BusinessKey: String(10);
	type SDate: LocalDate;
	type CurrencyT: String(5);
	type AmountT: Decimal(15,2);
	type QuantityT: Decimal(13,3);
	type UnitT: String(3);
	type StatusT: String(1);
	type HistoryT{
		CREATEDBY: BusinessKey;
		CREATEDAT: SDate;
		CHANGEDBY: BusinessKey;
		CHANGEDAT: SDate;
	};
	@Comment: 'Purchase Order Header aka Table Header'
	entity Header{
		key PurchaseOrderId: Integer generated by default as identity(start with 200000000 increment by 1 no minvalue maxvalue 2999999999 no cache no cycle);
		Items: association[1,0..*] to Item on Header.PurchaseOrderId = PurchaseOrderId;
		History: HistoryT;
		NoteId: BusinessKey null;
		Partner: BusinessKey;
		Currency: CurrencyT;
		GrossAmount: AmountT;
		NetAmount: AmountT;
		TaxAmount: AmountT;
		LifeCycleStatus: StatusT;
		AprovalStatus: StatusT;
		ConfirmStatus: StatusT;
		OrderingStatus: StatusT;
		InvoiceStatus: StatusT;
	}
	technical configuration{
		column store;
	};
	entity Item{
		key POHeader: association[*,1..1] to Header { PurchaseOrderId };
		key Product: BusinessKey;
		NoteId: BusinessKey null;
		Currency: CurrencyT;
		GrossAmount: AmountT;
		NetAmount: AmountT;
		TaxAmount: AmountT;
		Quantity: QuantityT;
		QuantityUnit: UnitT;
		DeliveryDate: SDate;
	}
	technical configuration{
		column store;
	};
	define view ItemView as select from Item{
		POHeader.PurchaseOrderId as "PurchaseOrderItemId",
		POHeader.Partner as "PartnerId",
		Product as "ProductID",
		Currency as "CurrencyCode",
		GrossAmount as "Amount",
		NetAmount as "NetAmount",
		TaxAmount as "TaxAmount",
		Quantity as "Quantity",
		QuantityUnit as "QuantityUnit",
		DeliveryDate as "DeliveryDate1"
	}
	with structured privilege check;
};   